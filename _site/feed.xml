<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-04-06T21:12:04+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Devan</title><subtitle>A repository of thoughts and notes</subtitle><entry><title type="html">Setting Up qBittorrent with VPN Integration on Ubuntu Server</title><link href="http://localhost:4000/articles/2025/04/06/jellyfin-proxmox.html" rel="alternate" type="text/html" title="Setting Up qBittorrent with VPN Integration on Ubuntu Server" /><published>2025-04-06T00:00:00+08:00</published><updated>2025-04-06T00:00:00+08:00</updated><id>http://localhost:4000/articles/2025/04/06/jellyfin-proxmox</id><content type="html" xml:base="http://localhost:4000/articles/2025/04/06/jellyfin-proxmox.html">&lt;h1 id=&quot;setting-up-qbittorrent-with-vpn-integration-on-ubuntu-server&quot;&gt;Setting Up qBittorrent with VPN Integration on Ubuntu Server&lt;/h1&gt;

&lt;p&gt;Setting up a torrent client on your home server can significantly enhance your media server setup, allowing you to automate downloads directly to your media library. This guide will walk you through setting up qBittorrent with VPN integration on an Ubuntu server, with specific focus on making it work with Jellyfin.&lt;/p&gt;

&lt;h2 id=&quot;why-qbittorrent&quot;&gt;Why qBittorrent?&lt;/h2&gt;

&lt;p&gt;After trying multiple solutions including Transmission, I settled on qBittorrent for its reliability, feature-rich web interface, and better stability. While Transmission is often recommended for its lightweight nature, I encountered numerous stability issues where the daemon would randomly crash or hang.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Ubuntu server (this guide was tested on Ubuntu 24.04 LTS)&lt;/li&gt;
  &lt;li&gt;An active VPN subscription (I use ExpressVPN)&lt;/li&gt;
  &lt;li&gt;Basic familiarity with Linux command line&lt;/li&gt;
  &lt;li&gt;SSH access to your server&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installation-process&quot;&gt;Installation Process&lt;/h2&gt;

&lt;h3 id=&quot;1-install-qbittorrent-nox-cli-version-with-webui&quot;&gt;1. Install qBittorrent-nox (CLI version with WebUI)&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;qbittorrent-nox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-set-up-a-service-for-qbittorrent&quot;&gt;2. Set Up a Service for qBittorrent&lt;/h3&gt;

&lt;p&gt;Create a systemd service file to manage qBittorrent:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/systemd/system/qbittorrent.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add the following content, replacing “yourusername” with your actual username:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=qBittorrent Daemon Service
After=network.target

[Service]
Type=simple
User=yourusername
Group=yourusername
ExecStart=/usr/bin/qbittorrent-nox --webui-port=8080
Restart=on-failure

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-create-download-directories&quot;&gt;3. Create Download Directories&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/downloads
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/downloads/incomplete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-configure-vpn-integration&quot;&gt;4. Configure VPN Integration&lt;/h3&gt;

&lt;h4 id=&quot;install-openvpn&quot;&gt;Install OpenVPN&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openvpn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;set-up-your-vpn-configuration&quot;&gt;Set Up Your VPN Configuration&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Obtain your OpenVPN configuration files from your VPN provider&lt;/li&gt;
  &lt;li&gt;Create a directory for your VPN configurations:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /etc/openvpn/vpnprovider
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Upload your .ovpn file to this directory&lt;/li&gt;
  &lt;li&gt;Create a credentials file:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/openvpn/vpnprovider/credentials
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add your VPN username on the first line and password on the second.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Set secure permissions:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod &lt;/span&gt;600 /etc/openvpn/vpnprovider/credentials
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;create-a-vpn-service&quot;&gt;Create a VPN Service&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/systemd/system/vpn.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=VPN Connection
After=network.target

[Service]
ExecStart=/usr/sbin/openvpn --config /etc/openvpn/vpnprovider/your-chosen-server.ovpn --auth-user-pass /etc/openvpn/vpnprovider/credentials
Restart=on-failure

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-link-qbittorrent-to-your-vpn&quot;&gt;5. Link qBittorrent to Your VPN&lt;/h3&gt;

&lt;p&gt;Update the qBittorrent service file to depend on the VPN:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/systemd/system/qbittorrent.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Modify the [Unit] section:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=qBittorrent Daemon Service
After=network.target vpn.service
Requires=vpn.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6-enable-and-start-services&quot;&gt;6. Enable and Start Services&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;vpn
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;qbittorrent
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start vpn
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start qbittorrent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;common-gotchas-and-troubleshooting&quot;&gt;Common Gotchas and Troubleshooting&lt;/h2&gt;

&lt;h3 id=&quot;the-nonexistent-home-directory-error&quot;&gt;The “nonexistent” Home Directory Error&lt;/h3&gt;

&lt;p&gt;If you see an error like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Could not create required directory '/nonexistent/.cache/qBittorrent'
Aborted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means the user running qBittorrent has an invalid home directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: Modify your service file to use your actual user account rather than a system user.&lt;/p&gt;

&lt;h3 id=&quot;permission-issues-with-download-directories&quot;&gt;Permission Issues with Download Directories&lt;/h3&gt;

&lt;p&gt;If Jellyfin can’t access your downloaded media:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Add the jellyfin user to your group&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; yourusername jellyfin

&lt;span class=&quot;c&quot;&gt;# Ensure your directories have appropriate permissions&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;750 ~/downloads
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;750 ~/downloads/incomplete
&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;750 ~/  &lt;span class=&quot;c&quot;&gt;# May be necessary if jellyfin needs to traverse your home dir&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Restart jellyfin&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart jellyfin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;vpn-connection-dropping&quot;&gt;VPN Connection Dropping&lt;/h3&gt;

&lt;p&gt;If the VPN connection drops, qBittorrent may continue running but expose your real IP address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: Bind qBittorrent specifically to the VPN interface by adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--net-interface=tun0&lt;/code&gt; option:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/qbittorrent-nox &lt;span class=&quot;nt&quot;&gt;--webui-port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8080 &lt;span class=&quot;nt&quot;&gt;--net-interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tun0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;web-ui-password-reset&quot;&gt;Web UI Password Reset&lt;/h3&gt;

&lt;p&gt;If you forget your Web UI password:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Stop the service:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl stop qbittorrent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Edit the config file:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nano ~/.config/qBittorrent/qBittorrent.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Find the WebUI section and remove or modify the password line:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[WebUI]
Password=
Username=admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Restart the service:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start qbittorrent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;verifying-your-torrent-traffic-is-using-the-vpn&quot;&gt;Verifying Your Torrent Traffic Is Using the VPN&lt;/h3&gt;

&lt;p&gt;Run this command to check:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ss &lt;span class=&quot;nt&quot;&gt;-tpn&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;qbittorrent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make sure connections show your VPN’s private IP (often starting with 10.x.x.x) rather than your actual network interface IP.&lt;/p&gt;

&lt;h2 id=&quot;configuring-qbittorrent-for-best-performance&quot;&gt;Configuring qBittorrent for Best Performance&lt;/h2&gt;

&lt;p&gt;Access the Web UI at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://your-server-ip:8080&lt;/code&gt; (default credentials: admin/adminadmin)&lt;/p&gt;

&lt;p&gt;Important settings to adjust:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Downloads&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Set “Default Save Path” to your media directory&lt;/li&gt;
      &lt;li&gt;Set proper incomplete download location&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Connection&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Bind to the VPN interface (tun0)&lt;/li&gt;
      &lt;li&gt;Adjust maximum connections based on your server capacity&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Set upload/download limits to avoid affecting other network activities&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BitTorrent&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Enable encryption&lt;/li&gt;
      &lt;li&gt;Configure port forwarding if supported by your VPN&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;integrating-with-jellyfin&quot;&gt;Integrating with Jellyfin&lt;/h2&gt;

&lt;p&gt;For optimal integration with Jellyfin:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Configure qBittorrent to download to directories that Jellyfin scans&lt;/li&gt;
  &lt;li&gt;Ensure proper permissions as outlined in the troubleshooting section&lt;/li&gt;
  &lt;li&gt;Consider setting up auto-categorization based on media type (TV shows vs. Movies)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;security-considerations&quot;&gt;Security Considerations&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Change the default Web UI password immediately&lt;/li&gt;
  &lt;li&gt;Use a VPN that doesn’t keep logs&lt;/li&gt;
  &lt;li&gt;Consider implementing additional firewall rules&lt;/li&gt;
  &lt;li&gt;Regularly update your system and qBittorrent&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;While setting up qBittorrent with VPN integration requires some initial effort, the result is a robust, secure downloading solution that integrates perfectly with media servers like Jellyfin. The combination of automated downloads and proper VPN protection makes for an excellent self-hosted solution that puts you in control of your media library.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="qbittorrent" /><category term="ubuntu" /><category term="vpn" /><category term="jellyfin" /><category term="media-server" /></entry><entry><title type="html">Setting Up a ProxMox Server with Immich and a Removable SATA Drive</title><link href="http://localhost:4000/articles/2025/03/28/immich-proxmox.html" rel="alternate" type="text/html" title="Setting Up a ProxMox Server with Immich and a Removable SATA Drive" /><published>2025-03-28T00:00:00+08:00</published><updated>2025-03-28T00:00:00+08:00</updated><id>http://localhost:4000/articles/2025/03/28/immich-proxmox</id><content type="html" xml:base="http://localhost:4000/articles/2025/03/28/immich-proxmox.html">&lt;h1 id=&quot;setting-up-a-proxmox-server-with-immich-and-a-removable-sata-drive&quot;&gt;Setting Up a ProxMox Server with Immich and a Removable SATA Drive&lt;/h1&gt;

&lt;p&gt;In this guide, I’ll walk through the complete process of setting up a Dell PowerEdge R410 as a ProxMox server with a removable SATA drive for a self-hosted Immich photo and video backup solution. This setup allows me to easily remove and back up the media disk whenever needed.&lt;/p&gt;

&lt;h2 id=&quot;project-overview&quot;&gt;Project Overview&lt;/h2&gt;

&lt;p&gt;Here’s what we set out to accomplish:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Set up and configure a used Dell PowerEdge R410 as a ProxMox virtualization server&lt;/li&gt;
  &lt;li&gt;Configure the first 3 SAS disks as RAID-0 for ProxMox OS and VM storage&lt;/li&gt;
  &lt;li&gt;Configure the 4th SATA disk as an external media disk to be used by Immich&lt;/li&gt;
  &lt;li&gt;Install and configure an Ubuntu Server VM to run Immich&lt;/li&gt;
  &lt;li&gt;Make the media disk removable for easy backup&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hardware-setup&quot;&gt;Hardware Setup&lt;/h2&gt;

&lt;h3 id=&quot;server-configuration&quot;&gt;Server Configuration&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Dell PowerEdge R410&lt;/li&gt;
  &lt;li&gt;3x SAS drives in RAID-0 for the main system&lt;/li&gt;
  &lt;li&gt;1x SATA 4TB drive as a removable media disk&lt;/li&gt;
  &lt;li&gt;PERC H700 RAID controller&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;part-1-initial-proxmox-setup&quot;&gt;Part 1: Initial ProxMox Setup&lt;/h2&gt;

&lt;h3 id=&quot;preparing-the-installation-media-with-ventoy&quot;&gt;Preparing the Installation Media with Ventoy&lt;/h3&gt;

&lt;p&gt;I used Ventoy to create the bootable USB drive for ProxMox installation. Ventoy is an open-source tool that allows you to create a bootable USB drive where you can simply copy multiple ISO files to the drive and boot from any of them without needing to reformat the drive each time.&lt;/p&gt;

&lt;p&gt;Here’s how I set it up:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Download and install Ventoy on a USB drive:
    &lt;ul&gt;
      &lt;li&gt;Use VirtualBox and boot into a Linux live environment&lt;/li&gt;
      &lt;li&gt;Connect USB drive and install Ventoy to it&lt;/li&gt;
      &lt;li&gt;Download the ProxMox ISO and copy it to the Ventoy USB drive&lt;/li&gt;
      &lt;li&gt;Ventoy automatically creates a boot menu with all ISOs on the drive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Boot the server with the USB drive and prepare the RAID configuration:
    &lt;ul&gt;
      &lt;li&gt;Press &lt;strong&gt;CTRL+R&lt;/strong&gt; during boot to access the RAID configuration utility&lt;/li&gt;
      &lt;li&gt;Use &lt;strong&gt;F10&lt;/strong&gt; to configure BIOS settings as needed&lt;/li&gt;
      &lt;li&gt;Create a new Virtual Disk (VD) for the 3 SAS disks (RAID-0)&lt;/li&gt;
      &lt;li&gt;Create a new Virtual Disk (VD) for the 4th media disk (RAID-0)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Wait for the new VD to be fully initialized before attempting OS installation!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;installation-gotchas&quot;&gt;Installation Gotchas&lt;/h3&gt;

&lt;p&gt;I encountered several issues during installation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You might need to remove the 4th disk for the installation to work properly&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Alternative approach:&lt;/strong&gt; If installation fails, remove the 4th drive during installation of ProxMox, then set up ProxMox with the VM. After that, reboot the machine with the 4th disk attached and create a new VD for it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I installed ProxMox on the RAID-0 array of the three SAS disks. After the basic installation, I had to deal with repository configuration.&lt;/p&gt;

&lt;h3 id=&quot;fixing-enterprise-repository-issues&quot;&gt;Fixing Enterprise Repository Issues&lt;/h3&gt;

&lt;p&gt;After installation, I needed to switch from the enterprise repositories to the free community repositories:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Edit the enterprise repository file:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nano /etc/apt/sources.list.d/pve-enterprise.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Comment out the enterprise repository by adding a # at the beginning of the line:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterprise&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Add the no-subscription repository:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /etc/apt/sources.list.d/pve-no-subscription.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Similarly for Ceph, edit its repository file:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nano /etc/apt/sources.list.d/ceph.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Comment out the enterprise repository and add the no-subscription one:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# deb https://enterprise.proxmox.com/debian/ceph-quincy bookworm enterprise&lt;/span&gt;
deb http://download.proxmox.com/debian/ceph-quincy bookworm no-subscription
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Update the package lists:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This allowed me to receive updates without requiring a subscription.&lt;/p&gt;

&lt;h2 id=&quot;part-2-configuring-the-sata-disk&quot;&gt;Part 2: Configuring the SATA Disk&lt;/h2&gt;

&lt;p&gt;Initially, the 4th SATA disk wasn’t being detected properly. After some troubleshooting, I discovered it was showing up as a “Foreign Configuration” in the PERC H700 RAID controller.&lt;/p&gt;

&lt;h3 id=&quot;resolving-foreign-configuration&quot;&gt;Resolving Foreign Configuration&lt;/h3&gt;

&lt;p&gt;To resolve this, I accessed the PERC H700 BIOS during system boot by pressing Ctrl+R and found the disk listed as a foreign configuration. Since I wanted to use it as a standalone disk rather than part of an existing array, I cleared the foreign configuration:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In the PERC H700 BIOS, selected “Foreign Config” &amp;gt; “Clear”&lt;/li&gt;
  &lt;li&gt;This made the disk available as an unconfigured good disk&lt;/li&gt;
  &lt;li&gt;Created a new single-disk RAID-0 virtual disk with that physical disk&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;repairing-the-gpt-partition-table&quot;&gt;Repairing the GPT Partition Table&lt;/h3&gt;

&lt;p&gt;After adding the disk to ProxMox, I discovered the disk had a corrupted GPT partition table. I used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gdisk&lt;/code&gt; to fix it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdisk &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; /dev/sdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This showed several problems with the GPT partition table:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Caution: Found protective or hybrid MBR and corrupt GPT. Using GPT, but disk
verification and recovery are STRONGLY recommended.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I entered recovery mode and accessed the expert menu to fix the issues:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# In gdisk&lt;/span&gt;
Command &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;? &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: r
Recovery/transformation &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;? &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: x
Expert &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;? &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This relocated the backup data structures to the end of the disk. After verification, I wrote the changes with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;w&lt;/code&gt; command.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-new-partition-and-filesystem&quot;&gt;Creating a New Partition and Filesystem&lt;/h3&gt;

&lt;p&gt;Since I wanted to use this as a fresh disk for Immich, I created a new partition table and formatted it with ext4:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Create a new empty GPT partition table&lt;/span&gt;
gdisk /dev/sdb
&lt;span class=&quot;c&quot;&gt;# Type 'o' for new table&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Type 'n' for new partition&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Accept defaults for first and last sectors&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Type '0700' for basic data partition&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Type 'w' to write changes&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Format with ext4 (not exFAT as initially planned)&lt;/span&gt;
mkfs.ext4 /dev/sdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I initially planned to use exFAT for better cross-platform compatibility, but ultimately went with ext4 as it’s the native Linux filesystem with better performance, journaling for improved data integrity, and is fully supported by default in Linux systems.&lt;/p&gt;

&lt;h2 id=&quot;part-3-adding-the-disk-to-proxmox&quot;&gt;Part 3: Adding the Disk to ProxMox&lt;/h2&gt;

&lt;p&gt;Once the disk was prepared, I needed to make it accessible to ProxMox:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Check the UUID of the disk&lt;/span&gt;
blkid /dev/sdb1
&lt;span class=&quot;c&quot;&gt;# Output: UUID=&quot;E7E6-D94B&quot; BLOCK_SIZE=&quot;512&quot; TYPE=&quot;exfat&quot; PTTYPE=&quot;dos&quot; PARTLABEL=&quot;Microsoft basic data&quot; PARTUUID=&quot;88025e98-0e04-49da-b48d-0ad992798361&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;part-4-setting-up-the-ubuntu-vm-for-immich&quot;&gt;Part 4: Setting Up the Ubuntu VM for Immich&lt;/h2&gt;

&lt;p&gt;I created an Ubuntu Server VM in ProxMox with the following specifications:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;4GB RAM&lt;/li&gt;
  &lt;li&gt;6 CPU cores&lt;/li&gt;
  &lt;li&gt;80GB main disk&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;attaching-the-media-disk-to-the-vm&quot;&gt;Attaching the Media Disk to the VM&lt;/h3&gt;

&lt;p&gt;I used the command line to attach the formatted disk to the VM:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Get the VM ID&lt;/span&gt;
qm list
&lt;span class=&quot;c&quot;&gt;# Output showed VM ID 100 for Immich VM&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Attach the disk to the VM&lt;/span&gt;
qm &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;100 &lt;span class=&quot;nt&quot;&gt;-scsi1&lt;/span&gt; /dev/sdb1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can verify the disk was added to the VM configuration:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;qm config 100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output should show something like:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scsi1: /dev/sdb1,size=4000224099840
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;part-5-configuring-the-vm-to-use-the-external-disk&quot;&gt;Part 5: Configuring the VM to Use the External Disk&lt;/h2&gt;

&lt;p&gt;After starting the VM, I needed to mount the disk and make it available to Immich.&lt;/p&gt;

&lt;h3 id=&quot;installing-exfat-support-in-the-vm&quot;&gt;Installing exFAT Support in the VM&lt;/h3&gt;

&lt;p&gt;First, I installed exFAT support in the Ubuntu VM:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;exfat-fuse exfat-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;creating-a-mount-point-and-mounting-the-disk&quot;&gt;Creating a Mount Point and Mounting the Disk&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Create mount point&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /mnt/immich-media

&lt;span class=&quot;c&quot;&gt;# Mount the disk&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount /dev/sdb /mnt/immich-media

&lt;span class=&quot;c&quot;&gt;# Verify the mount&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;immich-media
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;making-the-mount-persistent&quot;&gt;Making the Mount Persistent&lt;/h3&gt;

&lt;p&gt;To ensure the disk is mounted automatically on boot, I added it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/dev/sdb /mnt/immich-media ext4 defaults,nofail 0 0&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nofail&lt;/code&gt; option ensures the system boots normally even if the disk is not present.&lt;/p&gt;

&lt;h2 id=&quot;part-6-setting-up-immich-with-docker-compose&quot;&gt;Part 6: Setting Up Immich with Docker Compose&lt;/h2&gt;

&lt;p&gt;I installed Immich using the official Docker Compose setup, then modified it to use the external disk.&lt;/p&gt;

&lt;h3 id=&quot;configuring-docker-compose-for-the-external-disk&quot;&gt;Configuring Docker Compose for the External Disk&lt;/h3&gt;

&lt;p&gt;For the Immich setup, I decided to keep the default upload location while still making the external disk available to the container. I edited the docker-compose.yml file to add the external media volume:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${UPLOAD_LOCATION}:/usr/src/app/upload&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/mnt/immich-media:/usr/src/app/external-media&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This approach maintains the default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/src/app/upload&lt;/code&gt; path for the primary library storage while making the external disk available as an additional location. This provides more flexibility for managing media content and allows the default library structure to remain intact.&lt;/p&gt;

&lt;p&gt;I could have alternatively modified the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env&lt;/code&gt; file to change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPLOAD_LOCATION&lt;/code&gt; variable, but I found keeping the default structure more maintainable.&lt;/p&gt;

&lt;h3 id=&quot;setting-up-auto-start-for-docker-compose&quot;&gt;Setting Up Auto-Start for Docker Compose&lt;/h3&gt;

&lt;p&gt;Since Docker was installed via Snap on my system, I created a systemd service to ensure Immich starts automatically on boot:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/systemd/system/immich.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the following content:&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[Unit]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Immich Docker Compose Application&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;snapd.service network-online.target&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Wants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;network-online.target&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[Service]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;simple&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;WorkingDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/path/to/your/immich/directory&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;ExecStartPre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/bin/bash -c 'if ! mountpoint -q /mnt/immich-media; then mount /mnt/immich-media; fi'&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/snap/bin/docker-compose up&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/snap/bin/docker-compose down&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;on-failure&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;RestartSec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[Install]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi-user.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then enabled and started the service:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;immich.service
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start immich.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;part-7-configuring-immich-to-use-the-external-media&quot;&gt;Part 7: Configuring Immich to Use the External Media&lt;/h2&gt;

&lt;p&gt;Finally, I configured Immich through its web interface to use the external media directory:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Logged into the Immich web interface&lt;/li&gt;
  &lt;li&gt;Went to Administration → Library Settings&lt;/li&gt;
  &lt;li&gt;Configured the external media path as the primary upload destination&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This setup provides a flexible solution for a self-hosted photo and video backup system using Immich on ProxMox. The key advantage is the ability to remove the media disk for offline backups while maintaining a clean separation between the system and media storage.&lt;/p&gt;

&lt;p&gt;When I need to back up my media or add content from another system:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Shut down the Immich containers&lt;/li&gt;
  &lt;li&gt;Unmount the disk: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo umount /mnt/immich-media&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Shut down the VM&lt;/li&gt;
  &lt;li&gt;Detach the disk from the VM in ProxMox&lt;/li&gt;
  &lt;li&gt;Physically remove the disk from the server&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To reconnect:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Physically install the disk&lt;/li&gt;
  &lt;li&gt;Reattach it to the VM in ProxMox&lt;/li&gt;
  &lt;li&gt;Start the VM, and the disk will be automatically mounted&lt;/li&gt;
  &lt;li&gt;The Immich service will start automatically&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This modular approach offers both the convenience of a self-hosted solution with the practical ability to physically secure or transport the actual media data when needed.&lt;/p&gt;

&lt;h2 id=&quot;troubleshooting-tips&quot;&gt;Troubleshooting Tips&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;If the disk doesn’t mount automatically after a reboot, check &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt; and ensure the entry is correct&lt;/li&gt;
  &lt;li&gt;If Docker containers don’t start automatically, check the systemd service status with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl status immich.service&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If you need to repair the disk’s filesystem after unexpected removal, you might need to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fsck.exfat /dev/sdb1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;future-improvements&quot;&gt;Future Improvements&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Implement a more robust backup solution like rsync to an additional backup disk&lt;/li&gt;
  &lt;li&gt;Set up email notifications when the disk space reaches a certain threshold&lt;/li&gt;
  &lt;li&gt;Add monitoring for the health of the RAID arrays and the media disk&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;addendum&quot;&gt;Addendum&lt;/h2&gt;

&lt;h1 id=&quot;how-to-resize-an-ext4-root-partition-in-proxmox&quot;&gt;How to Resize an ext4 Root Partition in Proxmox&lt;/h1&gt;

&lt;p&gt;If your Proxmox-based virtual machine (VM) is running out of space on its root partition and that partition is using the &lt;strong&gt;ext4&lt;/strong&gt; filesystem, you can follow the steps below to enlarge the disk and extend your ext4 partition.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Always create a snapshot or a backup of your VM prior to making changes to the disk or partitions.&lt;/li&gt;
    &lt;li&gt;These instructions assume you have a Linux VM using &lt;strong&gt;ext4&lt;/strong&gt; for the root filesystem on a standard partition (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/sda3&lt;/code&gt;) and not LVM. If you have LVM or another filesystem type (like XFS), the steps differ.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;1-increase-the-virtual-disk-size-in-proxmox&quot;&gt;1. Increase the Virtual Disk Size in Proxmox&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Shut down&lt;/strong&gt; your VM (this is recommended for safety, though some distros support online resize).&lt;/li&gt;
  &lt;li&gt;In the &lt;strong&gt;Proxmox web interface&lt;/strong&gt;, select the VM and go to the &lt;strong&gt;Hardware&lt;/strong&gt; tab.&lt;/li&gt;
  &lt;li&gt;Choose the disk device (often named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scsi0&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtio0&lt;/code&gt;, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sata0&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Resize Disk&lt;/strong&gt;, then specify how much space you want to add (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+10G&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Once the operation completes, &lt;strong&gt;boot&lt;/strong&gt; the VM back up.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Taking a Proxmox snapshot (or other backup) before resizing is a great safety measure.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-confirm-the-new-disk-size-inside-the-vm&quot;&gt;2. Confirm the New Disk Size Inside the VM&lt;/h2&gt;

&lt;p&gt;After the VM boots, check that the operating system “sees” the new total disk size. For example:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsblk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should see something like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0    40G  0 disk
├─sda1   8:1    0   100M  0 part /boot/efi
├─sda2   8:2    0     1G  0 part [some-other-partition]
└─sda3   8:3    0    20G  0 part /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If sda is 40G while sda3 is still 20G, that’s normal. You’ve expanded the underlying virtual disk, but the partition hasn’t been resized yet.&lt;/p&gt;

&lt;h2 id=&quot;3-resize-the-partition&quot;&gt;3. Resize the Partition&lt;/h2&gt;

&lt;p&gt;You now need to make the VM’s partition (/dev/sda3 in this example) consume the extra space. Two common approaches:&lt;/p&gt;

&lt;h3 id=&quot;option-a-use-growpart&quot;&gt;Option A: Use growpart&lt;/h3&gt;

&lt;p&gt;If growpart is installed (commonly found in the cloud-guest-utils or cloud-init package on Debian/Ubuntu):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;growpart /dev/sda 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will automatically resize partition 3 to fill all available free space on the disk.&lt;/p&gt;

&lt;h3 id=&quot;option-b-use-parted&quot;&gt;Option B: Use parted&lt;/h3&gt;

&lt;p&gt;If you don’t have growpart, you can use GNU parted:&lt;/p&gt;

&lt;p&gt;Enter parted:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;parted /dev/sda
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Display the current partition table:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;parted&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; print
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Resize partition 3 to the maximum available space:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;parted&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; resizepart 3 100%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Quit parted:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;parted&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; quit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point, /dev/sda3 should match the full capacity of the disk (in the example, 40G).&lt;/p&gt;

&lt;h2 id=&quot;4-resize-the-ext4-filesystem&quot;&gt;4. Resize the ext4 Filesystem&lt;/h2&gt;

&lt;p&gt;With the partition enlarged, all that’s left is to grow the ext4 filesystem:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;resize2fs /dev/sda3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can typically run resize2fs while the filesystem is mounted on modern Linux distributions. This command adjusts the filesystem so that it now spans the expanded partition.&lt;/p&gt;

&lt;h2 id=&quot;5-verify-the-expanded-space&quot;&gt;5. Verify the Expanded Space&lt;/h2&gt;

&lt;p&gt;Finally, confirm the size change:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Look for the partition mounted at /, and you should see the increased capacity reflecting the new total size of /dev/sda3.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="dell" /><category term="poweredge" /><category term="r410" /><category term="raid" /><category term="proxmox" /><category term="immich" /><category term="docker" /></entry><entry><title type="html">Django Login: Embracing Third-Party Solutions</title><link href="http://localhost:4000/articles/2024/01/18/social-logins.html" rel="alternate" type="text/html" title="Django Login: Embracing Third-Party Solutions" /><published>2024-01-18T00:00:00+08:00</published><updated>2024-01-18T00:00:00+08:00</updated><id>http://localhost:4000/articles/2024/01/18/social-logins</id><content type="html" xml:base="http://localhost:4000/articles/2024/01/18/social-logins.html">&lt;p&gt;The landscape of authentication has evolved drastically, and in 2023, leveraging
third-party tools like Auth0, SuperTokens, and AWS Cognito can save significant
time and resources while ensuring robust security. Let’s expand our discussion
on Django authentication to include these tools and address why custom-building
login pages might be a thing of the past.&lt;/p&gt;

&lt;h2 id=&quot;the-shift-to-third-party-authentication-services&quot;&gt;The Shift to Third-Party Authentication Services&lt;/h2&gt;

&lt;p&gt;Building a login system from scratch can be resource-intensive and prone to
security risks. This is where services like Auth0, SuperTokens, and AWS Cognito
come into play, offering comprehensive authentication solutions.&lt;/p&gt;

&lt;h3 id=&quot;key-advantages&quot;&gt;Key Advantages&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Robust Security:&lt;/strong&gt; These services are dedicated to maintaining high-security standards, constantly updated to tackle emerging threats.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Comprehensive Features:&lt;/strong&gt; They cover a broad spectrum of authentication needs including social login, password recovery, email verification, and 2FA.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; Easily scalable to accommodate growing user bases without additional overhead.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rapid Integration:&lt;/strong&gt; Reduce development time with easy-to-integrate SDKs and APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;auth0-versatile-authentication-for-modern-applications&quot;&gt;Auth0: Versatile Authentication for Modern Applications&lt;/h2&gt;

&lt;p&gt;Auth0 offers a flexible, drop-in solution that can be integrated with Django,
providing a variety of authentication and authorization services.&lt;/p&gt;

&lt;h3 id=&quot;key-features&quot;&gt;Key Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Universal Login:&lt;/strong&gt; A single login solution that works across different platforms and devices.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Customizable Flows:&lt;/strong&gt; Tailor authentication and authorization flows to fit your application’s needs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Extensive Documentation:&lt;/strong&gt; Comprehensive guides and SDKs for seamless integration with Django.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;supertokens-open-source-and-highly-customizable&quot;&gt;SuperTokens: Open Source and Highly Customizable&lt;/h2&gt;

&lt;p&gt;SuperTokens is an open-source alternative, offering both self-hosted and managed
solutions, giving developers control over their user data.&lt;/p&gt;

&lt;h3 id=&quot;key-features-1&quot;&gt;Key Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Data Privacy:&lt;/strong&gt; Keep user data within your infrastructure if needed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Customizable UI:&lt;/strong&gt; Modify the look and feel of your login pages to match your brand.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Community Support:&lt;/strong&gt; Benefit from community-driven development and support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-cognito-secure-user-directory-service&quot;&gt;AWS Cognito: Secure User Directory Service&lt;/h2&gt;

&lt;p&gt;AWS Cognito is a scalable user directory service that integrates well with other
AWS services, ideal for applications hosted on AWS.&lt;/p&gt;

&lt;h3 id=&quot;key-features-2&quot;&gt;Key Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;AWS Integration:&lt;/strong&gt; Seamlessly integrates with other AWS services like S3, Lambda, and more.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Federated Identities:&lt;/strong&gt; Allows users to sign in through social identity providers like Google, Facebook, or Amazon.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Adaptive Authentication:&lt;/strong&gt; Uses machine learning to offer risk-based adaptive authentication.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;integrating-third-party-services-with-django&quot;&gt;Integrating Third-Party Services with Django&lt;/h2&gt;

&lt;p&gt;While Django’s built-in authentication system is powerful, integrating these
third-party services can greatly enhance your application’s capabilities.&lt;/p&gt;

&lt;h3 id=&quot;integration-considerations&quot;&gt;Integration Considerations&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;SDKs/APIs Compatibility:&lt;/strong&gt; Ensure compatibility with Django versions and project architecture.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Customization Needs:&lt;/strong&gt; Assess the level of customization required for authentication flows and UI.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cost and Scalability:&lt;/strong&gt; Consider the cost implications and scalability options of each service.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion-a-new-era-of-authentication-in-django&quot;&gt;Conclusion: A New Era of Authentication in Django&lt;/h2&gt;

&lt;p&gt;The paradigm shift towards third-party authentication services like Auth0,
SuperTokens, and AWS Cognito represents a significant advancement in how we
handle user authentication. By integrating these services with Django,
developers can achieve a secure, efficient, and user-friendly authentication
experience, freeing up valuable time to focus on core application features.&lt;/p&gt;

&lt;p&gt;Remember, the choice between using Django’s built-in system and these
third-party services depends on your specific project requirements, expertise,
and resources. Whichever path you choose, keeping abreast of the latest
developments in authentication technologies will always be key to maintaining
secure and efficient login systems.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="survey" /><category term="django" /></entry><entry><title type="html">Understanding Django’s Unit Test Process with Multiple Databases</title><link href="http://localhost:4000/articles/2024/01/18/django-test-flow.html" rel="alternate" type="text/html" title="Understanding Django’s Unit Test Process with Multiple Databases" /><published>2024-01-18T00:00:00+08:00</published><updated>2024-01-18T00:00:00+08:00</updated><id>http://localhost:4000/articles/2024/01/18/django-test-flow</id><content type="html" xml:base="http://localhost:4000/articles/2024/01/18/django-test-flow.html">&lt;p&gt;Django’s process for running unit tests, especially when multiple databases are
involved, is both intricate and fascinating. In this post, we’ll break down the
process step-by-step, from the moment you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python manage.py test&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;command-execution&quot;&gt;Command Execution&lt;/h2&gt;

&lt;p&gt;When you execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python manage.py test&lt;/code&gt;, Django’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manage.py&lt;/code&gt; script first
locates your project’s settings and initializes the Django environment. It then
locates the test command and executes it.&lt;/p&gt;

&lt;h2 id=&quot;test-discovery&quot;&gt;Test Discovery&lt;/h2&gt;

&lt;p&gt;Django’s built-in test discovery mechanism automatically searches for tests. By
default, it looks for files named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test*.py&lt;/code&gt; in your project directories,
adhering to Python’s standard &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unittest&lt;/code&gt; discovery rules.&lt;/p&gt;

&lt;h2 id=&quot;database-selection&quot;&gt;Database Selection&lt;/h2&gt;

&lt;p&gt;For a standard Django setup, tests use the default database. However, if your
application employs multiple databases, you have control over which databases
are used for each test:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;By default, tests target the default database.&lt;/li&gt;
  &lt;li&gt;Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;databases&lt;/code&gt; attribute in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TestCase&lt;/code&gt; class to specify different databases for your tests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;test-database-creation&quot;&gt;Test Database Creation&lt;/h2&gt;

&lt;p&gt;Django checks whether a test database needs to be created. This behavior can be
customized:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A separate test database is created by default.&lt;/li&gt;
  &lt;li&gt;Tests that don’t require a database can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SimpleTestCase&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TransactionTestCase&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;databases=[]&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;For multiple databases, Django creates a test database for each, typically prefixed with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;migrations&quot;&gt;Migrations&lt;/h2&gt;

&lt;p&gt;Migrations are applied to ensure the test database schema matches your
development environment. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--keepdb&lt;/code&gt; flag can be used to retain the test
database between runs, speeding up the process.&lt;/p&gt;

&lt;h2 id=&quot;test-execution&quot;&gt;Test Execution&lt;/h2&gt;

&lt;p&gt;Django uses the test runner defined in your settings (default:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django.test.runner.DiscoverRunner&lt;/code&gt;) to execute tests. Each test is run in
isolation within a database transaction, maintaining test independence.&lt;/p&gt;

&lt;h2 id=&quot;test-database-destruction&quot;&gt;Test Database Destruction&lt;/h2&gt;

&lt;p&gt;Post-testing, Django destroys the test databases unless the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--keepdb&lt;/code&gt; flag is
used. This ensures a fresh start for subsequent test runs.&lt;/p&gt;

&lt;h2 id=&quot;test-results&quot;&gt;Test Results&lt;/h2&gt;

&lt;p&gt;The results, including the number of tests, assertions, failures, and errors,
are displayed after the tests are complete.&lt;/p&gt;

&lt;p&gt;Key Takeaway: In projects with multiple databases, it’s crucial to correctly
specify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;databases&lt;/code&gt; attribute in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TestCase&lt;/code&gt; classes. This ensures
proper setup and usage of the necessary databases for your tests.&lt;/p&gt;

&lt;p&gt;Understanding and configuring this process is vital for effective testing in
complex Django projects.&lt;/p&gt;

&lt;h2 id=&quot;best-practices-for-multiple-database-applications&quot;&gt;Best Practices for Multiple Database Applications&lt;/h2&gt;

&lt;p&gt;When managing tests in applications that support multiple databases, it’s
generally advantageous to encourage modules to primarily interact with a single
database wherever feasible. This approach simplifies the testing process and
enhances maintainability.&lt;/p&gt;

&lt;p&gt;Additionally, it’s important to be aware of the role of the Database Router’s
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allow_migration&lt;/code&gt; method. This method plays a critical role during the
migration phase, particularly when creating test databases. In scenarios
involving secondary databases with unmanaged models, a notable consideration
arises: you must manually create the schema and tables for these models. This
step is crucial for ensuring that your tests execute correctly and interact as
expected with these unmanaged database components.&lt;/p&gt;

&lt;p&gt;Implementing these best practices can significantly streamline the testing
process in complex Django environments, ensuring more robust and reliable test
outcomes.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="presentation" /><category term="tdd" /></entry><entry><title type="html">Grokking Codebases quickly</title><link href="http://localhost:4000/articles/2022/09/05/grokking_tools.html" rel="alternate" type="text/html" title="Grokking Codebases quickly" /><published>2022-09-05T00:00:00+08:00</published><updated>2022-09-05T00:00:00+08:00</updated><id>http://localhost:4000/articles/2022/09/05/grokking_tools</id><content type="html" xml:base="http://localhost:4000/articles/2022/09/05/grokking_tools.html">&lt;p&gt;I recently I had to work with a large legacy codebase. It was especially
confusing as there was no documentation available. In order to get myself up to
speed as quickly as possible, I invested some time in finding some tools to aid
me in understanding the architecture of the codebase.&lt;/p&gt;

&lt;p&gt;Here are some tools I found which might be useful to you:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://gource.io/&quot;&gt;gource&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;A really cool visualisation library that lets you generate a movie of all the
 commits on a codebase in real-time. It’s not very scientific but I like that it
 gives you an overall sense of the history of a project. It visualises the the
 authors as well as the file types committed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/cool-RR/PySnooper&quot;&gt;PySnooper&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;A useful tool when working with a legacy codebase and you don’t have the ability
 to load the entire beast into an IDE. Allows you to tactically insert a single
 debug line and get feedback immediately.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/benfred/py-spy&quot;&gt;py-spy&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;This tool works with a running process. You point it to the process PID and it
 can generate &lt;a href=&quot;https://github.com/brendangregg/FlameGraph&quot;&gt;flamegraps&lt;/a&gt; as well as
 real-time top visualition. It is especially useful if you do not have access to
 any source code and you’re trying to figure out what a process is doing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jlfwong/speedscope&quot;&gt;Speedscope&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;This is tool is an alternative to flamegraphs. It’s an interactive, web-based
 viewer for performance profiles. It allows to you to drill down into a process
 to see where its spending its CPU cycles, RAM or time. I used it to profile
 my Django tests to see if there was an opportunity to speed them up.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="articles" /><category term="notes" /><category term="visualisation" /></entry><entry><title type="html">A Moment of Enlightenment</title><link href="http://localhost:4000/articles/2022/09/01/realisation_about_legacy_code.html" rel="alternate" type="text/html" title="A Moment of Enlightenment" /><published>2022-09-01T00:00:00+08:00</published><updated>2022-09-01T00:00:00+08:00</updated><id>http://localhost:4000/articles/2022/09/01/realisation_about_legacy_code</id><content type="html" xml:base="http://localhost:4000/articles/2022/09/01/realisation_about_legacy_code.html">&lt;p&gt;…I was describing my thoughts to a friend in another field about the
“horrible” state of a codebase. And he remarked that every software engineer
he’d worked with always complained about the existing code base…&lt;/p&gt;

&lt;p&gt;It was at that moment that I realised that I was perpetuating the stereotypes I
was trying solve.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="notes" /><category term="legacy-code" /></entry><entry><title type="html">Detecting Duplicate Django Tests</title><link href="http://localhost:4000/articles/2022/09/01/duplicate_django_tests.html" rel="alternate" type="text/html" title="Detecting Duplicate Django Tests" /><published>2022-09-01T00:00:00+08:00</published><updated>2022-09-01T00:00:00+08:00</updated><id>http://localhost:4000/articles/2022/09/01/duplicate_django_tests</id><content type="html" xml:base="http://localhost:4000/articles/2022/09/01/duplicate_django_tests.html">&lt;p&gt;While improving the test coverage of a legacy Django code base, the question of
duplicate tests was raised. This particular code base moved towards using
end-to-end tests sometime in its past because the business logic became to
tangled to unit test.  As a result, with each new feature, more and more
end-to-end tests were piled on.&lt;/p&gt;

&lt;p&gt;As part of an initial survey, the question was raised as to how many of our
tests were testing duplicated parts of the code base. And whether we could
eliminate any duplicate tests to speed up our runs.&lt;/p&gt;

&lt;p&gt;To find out, I conducted an experiment to see what was the minimum number of
test I could run to keep the same level of coverage.&lt;/p&gt;

&lt;p&gt;I first ran the entire test suite with coverage and made sure to enable dynamic
contexts. This creates an sqlite database which I could then mine. The database
provides the total number of tests as well as the lines tested by each test.
Also, we know the overall percentage of coverage as provided by the coverage
report.&lt;/p&gt;

&lt;p&gt;The interesting bit, is how to select the minimum number of tests to get the
same percentage of coverage. Turns out, this is known as the set cover problem.
After going down the rabbit-hole if P vs NP algorithms, I eventually settled on
a &lt;a href=&quot;http://www.martinbroadhurst.com/greedy-set-cover-in-python.html&quot;&gt;greedy approach&lt;/a&gt; for
best results.&lt;/p&gt;

&lt;p&gt;After writing a python script to extract the set of tests. I could then re-run
coverage with that set of tests to verify that the percentage of coverage is the
same.&lt;/p&gt;

&lt;p&gt;One interesting finding is was that with this particular code-base, I could
achieve the same percentage of coverage with one quarter of the number of tests.&lt;/p&gt;

&lt;p&gt;You can download my python script &lt;a href=&quot;/assets/script/duplicate_tests.py&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="notes" /><category term="django" /><category term="tdd" /><category term="script" /></entry><entry><title type="html">A Presentation on Test Driven Development</title><link href="http://localhost:4000/articles/2022/09/01/refactoring_presentation.html" rel="alternate" type="text/html" title="A Presentation on Test Driven Development" /><published>2022-09-01T00:00:00+08:00</published><updated>2022-09-01T00:00:00+08:00</updated><id>http://localhost:4000/articles/2022/09/01/refactoring_presentation</id><content type="html" xml:base="http://localhost:4000/articles/2022/09/01/refactoring_presentation.html">&lt;p&gt;I recently had the opportunity to give a presentation at a company Lunch and
Learn. I chose a topic that was close to my heart. Since I discovered Test
Driven Development (TDD) as a junior engineer, its been one of the the main
tools I use to create value while developing.&lt;/p&gt;

&lt;p&gt;This Presentation touches on the “Why” of TDD. The muddy waters of tests and
integrated tests. And finally, how we can attempt to refactoy legacy codebases.&lt;/p&gt;

&lt;p&gt;You can download a PDF of the slides &lt;a href=&quot;/assets/pdf/tdd.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="presentation" /><category term="tdd" /></entry><entry><title type="html">Book Review: Hello Startup</title><link href="http://localhost:4000/articles/2020/09/22/hello_startup_review.html" rel="alternate" type="text/html" title="Book Review: Hello Startup" /><published>2020-09-22T00:00:00+08:00</published><updated>2020-09-22T00:00:00+08:00</updated><id>http://localhost:4000/articles/2020/09/22/hello_startup_review</id><content type="html" xml:base="http://localhost:4000/articles/2020/09/22/hello_startup_review.html">&lt;p&gt;I recently finished a wonderful book on the technical decisions of building a
startup. I personally found the bits on picking a tech stach most interesting.&lt;/p&gt;

&lt;h4 id=&quot;picking-a-tech-stack&quot;&gt;Picking a Tech Stack&lt;/h4&gt;

&lt;p&gt;A good tech stack is one that scales faster than the people required to
maintain it.&lt;/p&gt;

&lt;p&gt;The current stack will definitely be wrong for the future, It just needs to get
us there. Iteration is the key.&lt;/p&gt;

&lt;p&gt;Pick a list of popular languages. You can quickly shorten this list by applying
three filters: problem fit, programming paradigm, and performance requirements.&lt;/p&gt;

&lt;p&gt;If you’re using a web framework to build something important to your
business—something that’s more than a prototype—the best choice is usually a
modular full stack framework. That way, you get the best of both worlds: a
documented, community supported, open source framework where the defaults do a
good job of handling most use cases, plus the ability to plug in custom
libraries for a few special cases.&lt;/p&gt;

&lt;p&gt;Django is for CRUD.
Node.js is for realtime applications.&lt;/p&gt;

&lt;p&gt;Consider splitting the web app by language and purpose.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="notes" /><category term="startup" /></entry><entry><title type="html">Ideal Setup</title><link href="http://localhost:4000/articles/2020/04/28/nindo.html" rel="alternate" type="text/html" title="Ideal Setup" /><published>2020-04-28T00:00:00+08:00</published><updated>2020-04-28T00:00:00+08:00</updated><id>http://localhost:4000/articles/2020/04/28/nindo</id><content type="html" xml:base="http://localhost:4000/articles/2020/04/28/nindo.html">&lt;p&gt;Here is my current collection of useful tools and models.  This is to serve a
reminder and guide to myself and possibly a guide to others.&lt;/p&gt;

&lt;h4 id=&quot;body&quot;&gt;Body&lt;/h4&gt;

&lt;p&gt;The objective here is to maximise energy levels.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Minimal sugar&lt;/li&gt;
  &lt;li&gt;Stay hydrated&lt;/li&gt;
  &lt;li&gt;Stretch/Yoga breaks&lt;/li&gt;
  &lt;li&gt;Daily cardio&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mind&quot;&gt;Mind&lt;/h4&gt;

&lt;p&gt;The Objective here manage your daily state.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Being mindful throughout the day&lt;/li&gt;
  &lt;li&gt;Practice empathy and kindness to all&lt;/li&gt;
  &lt;li&gt;Having a vision&lt;/li&gt;
  &lt;li&gt;Keeping a daily journal&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tools&quot;&gt;Tools&lt;/h4&gt;

&lt;p&gt;I used to have specific tools that I used. But now, I’m a little more agnostic.
The litmus test for me is to use any tool that is a force multiplier.&lt;/p&gt;

&lt;h4 id=&quot;processes&quot;&gt;Processes&lt;/h4&gt;

&lt;p&gt;The first round is probably going to be wrong. Get the first version out and
use the right metrics for succes from day one. If it’s revenue, let that guide
you.&lt;/p&gt;

&lt;h4 id=&quot;useful-books&quot;&gt;Useful Books&lt;/h4&gt;

&lt;p&gt;I will always be a voracious reader of books. But these days, I have to temper
my enthusiasm to learn with a decent measure of practice. In some matters,
experience does indeed trump knowledge and I am slowly trying to discern the
line between the two.&lt;/p&gt;

&lt;p&gt;So my advice here is to read as much as you can, but remember to practice what
you read to find out what works best for you.&lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;

&lt;p&gt;Know what you want and fail your way to success.&lt;/p&gt;</content><author><name></name></author><category term="articles" /><category term="notes" /></entry></feed>